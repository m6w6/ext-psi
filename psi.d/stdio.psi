#include <stdio.h>

function psi\fopen(string $path, string $mode) : object {
	let path = pathval($path);
	let mode = strval($mode);
	return fopen(path, mode)
		as to_object(fopen);
}

function psi\fclose(object $stream) : int {
	let stream = objval($stream);
	return fclose(stream) as to_int(fclose);
}

function psi\fread(object $stream, string &$data = NULL, int $len = 1, int $n = 8192) : int {
	let len = intval($len);
	let n = intval($n);
	let stream = objval($stream);
	let buf = calloc(n, len);
	pre_assert stream != NULL;
	return fread(buf, len, n, stream) as to_int(fread);
	set $data = to_string(buf, fread * len);
}

function psi\feof(object $stream) : int {
	let stream = objval($stream);
	return feof(stream) as to_int(feof);
}

function psi\fileno(object $stream) : int {
	let stream = objval($stream);
	return fileno(stream) as to_int(fileno);
}

function psi\ferror(object $stream) : int {
	let stream = objval($stream);
	return ferror(stream) as to_int(ferror);
}

function psi\clearerr(object $stream) : void {
	let stream = objval($stream);
	return clearerr(stream) as void(clearerr);
}

function psi\fseek(object $stream, int $offset, int $whence) : int {
	let stream = objval($stream);
	let offset = intval($offset);
	let whence = intval($whence);
	return fseek(stream, offset, whence) as to_int(fseek);
}

function psi\ftell(object $stream) : int {
	let stream = objval($stream);
	return ftell(stream) as to_int(ftell);
}

function psi\rewind(object $stream) : void {
	let stream = objval($stream);
	return rewind(stream) as void(rewind);
}

function psi\printf(string $fmt, mixed ...$args) : int {
	let format = strval($fmt);
	return printf(format) as to_int(printf);
}

